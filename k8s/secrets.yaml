# Kubernetes Secrets for sensitive configuration
# Following v2.0 Architecture requirements for security and secrets management
# NOTE: In production, use external secret management like HashiCorp Vault or cloud KMS

apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: second-opinion
  labels:
    app: second-opinion
    component: database
    version: v2.0
type: Opaque
stringData:
  # PostgreSQL credentials (use strong passwords in production)
  DATABASE_URL: "postgresql://second_opinion_user:CHANGE_ME_IN_PRODUCTION@postgres:5432/secondopinion"
  POSTGRES_USER: "second_opinion_user"
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  POSTGRES_DB: "secondopinion"
  
  # Read replica credentials (if used)
  DATABASE_READ_URL: "postgresql://readonly_user:CHANGE_ME_IN_PRODUCTION@postgres-read:5432/secondopinion"

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: second-opinion
  labels:
    app: second-opinion
    component: redis
    version: v2.0
type: Opaque
stringData:
  REDIS_URL: "redis://:CHANGE_ME_IN_PRODUCTION@redis:6379"
  REDIS_PASSWORD: "CHANGE_ME_IN_PRODUCTION"

---
apiVersion: v1
kind: Secret
metadata:
  name: application-secrets
  namespace: second-opinion
  labels:
    app: second-opinion
    component: app
    version: v2.0
type: Opaque
stringData:
  # Authentication secrets
  JWT_SECRET: "CHANGE_ME_IN_PRODUCTION_USE_STRONG_SECRET"
  NEXTAUTH_SECRET: "CHANGE_ME_IN_PRODUCTION_USE_STRONG_SECRET"
  NEXTAUTH_URL: "https://app.second-opinion.com"
  
  # Encryption keys
  ENCRYPTION_KEY: "CHANGE_ME_IN_PRODUCTION_32_CHAR_KEY"
  
  # External API keys
  OPENAI_API_KEY: ""  # Set in production
  ANTHROPIC_API_KEY: ""  # Set in production
  
  # Cloud provider credentials (managed by external secret operator in production)
  AWS_ACCESS_KEY_ID: ""
  AWS_SECRET_ACCESS_KEY: ""
  AZURE_CLIENT_ID: ""
  AZURE_CLIENT_SECRET: ""
  GCP_SERVICE_ACCOUNT_KEY: ""

---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: second-opinion
  labels:
    app: second-opinion
    component: monitoring
    version: v2.0
type: Opaque
stringData:
  # Grafana admin password
  GF_SECURITY_ADMIN_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  
  # Alert manager secrets
  SLACK_WEBHOOK_URL: ""
  PAGERDUTY_INTEGRATION_KEY: ""
  
  # SMTP credentials for alerting
  SMTP_HOST: "smtp.gmail.com"
  SMTP_PORT: "587"
  SMTP_USERNAME: ""
  SMTP_PASSWORD: ""

---
# TLS certificates (use cert-manager in production)
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: second-opinion
  labels:
    app: second-opinion
    component: tls
    version: v2.0
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key (use cert-manager for automatic generation)
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Replace with actual certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Replace with actual private key

---
# Image pull secrets (if using private registry)
apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: second-opinion
  labels:
    app: second-opinion
    component: registry
    version: v2.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: ewogICJhdXRocyI6IHsKICAgICJoYXJib3IuZXhhbXBsZS5jb20iOiB7CiAgICAgICJ1c2VybmFtZSI6ICJ1c2VyIiwKICAgICAgInBhc3N3b3JkIjogInBhc3N3b3JkIiwKICAgICAgImF1dGgiOiAiZFhObGNqcHdZWE56ZDI5eVpBPT0iCiAgICB9CiAgfQp9